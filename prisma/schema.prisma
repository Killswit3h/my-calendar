// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Calendar {
  id          String       @id @default(cuid())
  name        String
  isPrivate   Boolean      @default(true)
  events      Event[]
  shareTokens ShareToken[] // back relation for sharing
  createdAt   DateTime     @default(now())
}

model Event {
  id             String      @id @default(cuid())
  calendarId     String
  title          String
  description    String?
  startsAt       DateTime
  endsAt         DateTime
  allDay         Boolean     @default(true) // all-day by default for your use-case
  location       String?
  // color removed; color now derived from type
  type           EventType?  // GUARDRAIL, FENCE, TEMP_FENCE, HANDRAIL, ATTENUATOR
  // attachments (stored inline for simplicity; fine for small files)
  attachmentName String?
  attachmentType String?     // mime type
  attachmentData Bytes?      // file bytes (<= ~5â€“8MB recommended)
  createdAt      DateTime    @default(now())

  calendar       Calendar    @relation(fields: [calendarId], references: [id], onDelete: Cascade)
}

model ShareToken {
  id         String     @id @default(cuid())
  calendarId String
  role       ShareRole
  expiresAt  DateTime?
  createdAt  DateTime   @default(now())

  calendar   Calendar   @relation(fields: [calendarId], references: [id], onDelete: Cascade)
}

enum ShareRole {
  VIEWER
  EDITOR
}

enum EventType {
  GUARDRAIL
  FENCE
  TEMP_FENCE
  HANDRAIL
  ATTENUATOR
}
